import { useEffect,useState } from "react";
import { Link } from "react-router-dom";
import { useParams } from "react-router-dom";
import { COMPANY_URL } from "../imgData";

function CompanyPage() {
    let { company } = useParams();
    let [comp_info, setCompanyInfo] = useState(null);
    let [error, setError] = useState(null);

    console.log(company)

    useEffect(() => {
        fetch(`${COMPANY_URL}/${encodeURIComponent(company)}`)
            .then(resp => resp.json())
            .then(data => setCompanyInfo(data))
            .catch(e => {
                console.log(e)
                setCompanyInfo(null);
                setError('Not Found or connection error');
            })
    }, [company]);

    if (comp_info) {
        console.log(comp_info);
        return (
            <div>
                <img src={comp_info.url} alt="" width='100%' style={{marginTop: '60px'}} />
                <h1 style={{marginLeft: '30px', marginTop: '30px', marginRight: "100px", fontSize: "40px"}}>
                    {comp_info.title}
                </h1>
                <Link to={`/${company}/learn-more`}>
                <svg width="32" height="162" viewBox="0 0 32 162" fill="none" xmlns="http://www.w3.org/2000/svg" className="learn-more">
                    <g filter="url(#filter0_d_1_15)">
                    <rect x="4.00002" y="0.249878" width="24" height="24" rx="12" fill="black"/>
                    <path d="M8.41992 153.9L8.41992 151.918L21.3398 151.918L21.3398 144.877L23 144.877L23 153.9L8.41992 153.9ZM16.6328 133.012L17.5117 133.012L17.5117 140.795L17.5703 140.795C19.0612 140.847 20.1322 140.564 20.7832 139.945C21.4342 139.32 21.7598 138.441 21.7598 137.309C21.7598 136.736 21.6686 136.137 21.4863 135.512C21.304 134.887 21.0273 134.219 20.6563 133.51L22.4434 133.51C22.7233 134.193 22.9316 134.854 23.0684 135.492C23.2116 136.124 23.2832 136.736 23.2832 137.328C23.2832 139.027 22.7754 140.355 21.7598 141.313C20.7376 142.27 19.3314 142.748 17.541 142.748C15.7962 142.748 14.403 142.279 13.3613 141.342C12.3197 140.404 11.7988 139.154 11.7988 137.592C11.7988 136.199 12.2708 135.102 13.2148 134.301C14.1589 133.493 15.2982 133.064 16.6328 133.012ZM16.1055 134.809C15.3503 134.887 14.6992 135.163 14.1523 135.639C13.599 136.107 13.3223 136.785 13.3223 137.67C13.3223 138.536 13.6087 139.249 14.1816 139.809C14.7546 140.368 15.3991 140.674 16.1152 140.727L16.1055 134.809ZM17.502 125.043L17.502 125.639C17.502 126.687 17.6875 127.478 18.0586 128.012C18.4232 128.539 18.9701 128.803 19.6992 128.803C20.3568 128.803 20.8678 128.604 21.2324 128.207C21.597 127.81 21.7793 127.26 21.7793 126.557C21.7793 125.567 21.4375 124.789 20.7539 124.223C20.0638 123.656 19.1133 123.37 17.9023 123.363L17.502 123.363L17.502 125.043ZM16.7598 121.557L23 121.557L23 123.363L21.3789 123.363C22.0299 123.747 22.5117 124.232 22.8242 124.818C23.1302 125.398 23.2832 126.104 23.2832 126.938C23.2832 128.051 22.9707 128.939 22.3457 129.604C21.7142 130.268 20.8711 130.6 19.8164 130.6C18.599 130.6 17.6745 130.193 17.043 129.379C16.4115 128.559 16.0957 127.357 16.0957 125.775L16.0957 123.363L15.8125 123.363C14.9401 123.37 14.3086 123.591 13.918 124.027C13.5208 124.464 13.3223 125.16 13.3223 126.117C13.3223 126.729 13.4102 127.348 13.5859 127.973C13.7617 128.598 14.0189 129.206 14.3574 129.799L12.5605 129.799C12.3066 129.135 12.1178 128.5 11.9941 127.895C11.8639 127.283 11.7988 126.69 11.7988 126.117C11.7988 125.212 11.9323 124.441 12.1992 123.803C12.4661 123.158 12.8665 122.637 13.4004 122.24C13.7259 121.993 14.1296 121.817 14.6113 121.713C15.0866 121.609 15.8027 121.557 16.7598 121.557ZM14.3184 108.568C14.0189 108.952 13.8008 109.343 13.6641 109.74C13.5273 110.137 13.459 110.574 13.459 111.049C13.459 112.169 13.8105 113.025 14.5137 113.617C15.2168 114.21 16.2324 114.506 17.5605 114.506L23 114.506L23 116.313L12.0625 116.313L12.0625 114.506L14.2012 114.506C13.4264 114.206 12.834 113.747 12.4238 113.129C12.0072 112.504 11.7988 111.765 11.7988 110.912C11.7988 110.469 11.8542 110.056 11.9648 109.672C12.0755 109.288 12.248 108.92 12.4824 108.568L14.3184 108.568ZM16.2227 97.5332L23 97.5332L23 99.3398L16.2227 99.3398C15.2396 99.3398 14.5169 99.5124 14.0547 99.8574C13.5924 100.202 13.3613 100.743 13.3613 101.479C13.3613 102.318 13.6608 102.966 14.2598 103.422C14.8522 103.871 15.7051 104.096 16.8184 104.096L23 104.096L23 105.893L12.0625 105.893L12.0625 104.096L13.7031 104.096C13.0781 103.777 12.6061 103.344 12.2871 102.797C11.9616 102.25 11.7988 101.602 11.7988 100.854C11.7988 99.7402 12.1667 98.9102 12.9023 98.3633C13.6315 97.8099 14.7383 97.5332 16.2227 97.5332ZM8.46875 83.3438L8.46875 80.707L15.8711 78.1875L8.46875 75.6484L8.46875 73.002L23 73.002L23 74.8281L10.1582 74.8281L17.8145 77.4258L17.8145 78.9199L10.1582 81.5273L23 81.5273L23 83.3438L8.46875 83.3438ZM13.3223 65.6289C13.3223 66.5404 13.6771 67.2305 14.3867 67.6992C15.0964 68.168 16.1478 68.4023 17.541 68.4023C18.9277 68.4023 19.9792 68.168 20.6953 67.6992C21.4049 67.2305 21.7598 66.5404 21.7598 65.6289C21.7598 64.7109 21.4049 64.0176 20.6953 63.5488C19.9792 63.0801 18.9277 62.8457 17.541 62.8457C16.1478 62.8457 15.0964 63.0801 14.3867 63.5488C13.6771 64.0176 13.3223 64.7109 13.3223 65.6289ZM11.7988 65.6289C11.7988 64.112 12.2904 62.9531 13.2734 62.1523C14.2565 61.3451 15.679 60.9414 17.541 60.9414C19.4095 60.9414 20.8353 61.3418 21.8184 62.1426C22.7949 62.9434 23.2832 64.1055 23.2832 65.6289C23.2832 67.1458 22.7949 68.3047 21.8184 69.1055C20.8353 69.9063 19.4095 70.3066 17.541 70.3066C15.679 70.3066 14.2565 69.9063 13.2734 69.1055C12.2904 68.3047 11.7988 67.1458 11.7988 65.6289ZM14.3184 48.3145C14.0189 48.6986 13.8008 49.0892 13.6641 49.4863C13.5273 49.8835 13.459 50.3197 13.459 50.7949C13.459 51.9147 13.8105 52.7708 14.5137 53.3633C15.2168 53.9557 16.2324 54.252 17.5605 54.252L23 54.252L23 56.0586L12.0625 56.0586L12.0625 54.252L14.2012 54.252C13.4264 53.9525 12.834 53.4935 12.4238 52.875C12.0072 52.25 11.7988 51.5111 11.7988 50.6582C11.7988 50.2155 11.8542 49.8021 11.9648 49.418C12.0755 49.0339 12.248 48.666 12.4824 48.3145L14.3184 48.3145ZM16.6328 36.6055L17.5117 36.6055L17.5117 44.3887L17.5703 44.3887C19.0612 44.4408 20.1322 44.1576 20.7832 43.5391C21.4342 42.9141 21.7598 42.0352 21.7598 40.9023C21.7598 40.3294 21.6686 39.7305 21.4863 39.1055C21.304 38.4805 21.0273 37.8132 20.6563 37.1035L22.4434 37.1035C22.7233 37.7871 22.9316 38.4479 23.0684 39.0859C23.2116 39.7174 23.2832 40.3294 23.2832 40.9219C23.2832 42.6211 22.7754 43.9492 21.7598 44.9063C20.7376 45.8633 19.3314 46.3418 17.541 46.3418C15.7962 46.3418 14.403 45.873 13.3613 44.9355C12.3197 43.998 11.7988 42.748 11.7988 41.1855C11.7988 39.7923 12.2708 38.6953 13.2148 37.8945C14.1589 37.0872 15.2982 36.6576 16.6328 36.6055ZM16.1055 38.4023C15.3503 38.4805 14.6992 38.7572 14.1523 39.2324C13.599 39.7012 13.3223 40.3783 13.3223 41.2637C13.3223 42.1296 13.6087 42.8424 14.1816 43.4023C14.7546 43.9622 15.3991 44.2682 16.1152 44.3203L16.1055 38.4023Z" fill="black"/>
                    <path d="M9.75006 7L21.2501 7L21.2501 18.5" stroke="white" stroke-width="2"/>
                    <path d="M21.0834 7.16658L10.0834 18.1666" stroke="white" stroke-width="2"/>
                    </g>
                    <defs>
                    <filter id="filter0_d_1_15" x="1.52588e-05" y="0.249878" width="32" height="161.651" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                    <feOffset dy="4"/>
                    <feGaussianBlur stdDeviation="2"/>
                    <feComposite in2="hardAlpha" operator="out"/>
                    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_15"/>
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_15" result="shape"/>
                    </filter>
                    </defs>
                </svg>
                </Link>
            </div>
        );
    } else {
        if (error) {
            return (
                <div style={{margin: '7rem'}}>{error}</div>
            )
        } else {
            <h2>Laoding...</h2>
        }
    }
}

export default CompanyPage;